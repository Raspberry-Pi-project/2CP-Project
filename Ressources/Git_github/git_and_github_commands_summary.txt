
### 1. Basic Git Commands

#### Setup and Configuration
- Set your name and email (for commits):
  git config --global user.name "Your Name"
  git config --global user.email "youremail@example.com"

- Check current configuration:
  git config --list

### 2. Repository Setup

#### Initialize a Git Repository
- Initialize a new repository:
  git init

#### Clone a Repository
- Clone a repository from GitHub (or any remote URL):
  git clone https://github.com/username/repository-name.git

### 3. Basic Git Workflow

#### Checking Status
- Check the status of the repository (modified files, etc.):
  git status

#### Staging and Committing Changes
- Stage all changes:
  git add .

- Stage specific files:
  git add <file1> <file2>

- Commit changes:
  git commit -m "Commit message"

- Commit changes and skip the staging area (using the -a flag):
  git commit -am "Commit message"

### 4. Branching and Merging

#### Creating and Switching Branches
- Create a new branch:
  git branch <branch_name>

- Switch to a different branch:
  git checkout <branch_name>

- Create a new branch and switch to it:
  git checkout -b <branch_name>

#### Merging Branches
- Merge a branch into the current branch:
  git merge <branch_name>

#### Deleting Branches
- Delete a local branch:
  git branch -d <branch_name>

- Force delete a local branch:
  git branch -D <branch_name>

- Delete a remote branch:
  git push origin --delete <branch_name>

### 5. Viewing Commit History
- View commit history:
  git log

- View commit history with one line per commit:
  git log --oneline

### 6. Remote Repositories

#### Adding a Remote
- Add a remote repository (e.g., GitHub):
  git remote add origin https://github.com/username/repository-name.git

#### Fetching and Pulling Changes
- Fetch changes from a remote (without merging):
  git fetch origin

- Pull changes from a remote (fetch + merge):
  git pull origin <branch_name>

#### Pushing Changes
- Push changes to a remote repository:
  git push origin <branch_name>

- Set the upstream branch for a new branch:
  git push -u origin <branch_name>

#### List Remotes
- List all remotes:
  git remote -v

### 7. Undoing Changes

#### Unstaging Changes
- Unstage a file (keep changes but remove from staging):
  git reset <file_name>

- Unstage all changes:
  git reset

#### Discarding Local Changes
- Discard changes in a file (working directory):
  git checkout -- <file_name>

- Discard all local changes (careful!):
  git reset --hard

### 8. Tagging

#### Creating and Listing Tags
- Create a tag:
  git tag <tag_name>

- List all tags:
  git tag

#### Pushing Tags
- Push a tag to the remote repository:
  git push origin <tag_name>

- Push all tags to the remote repository:
  git push --tags

### 9. Working with GitHub (or Other Remotes)

#### Forking and Cloning
- Fork a repository on GitHub (using the GitHub interface), then clone it locally:
  git clone https://github.com/yourusername/forked-repository.git

#### Creating a Pull Request
- After committing and pushing your changes, go to GitHub, and open a pull request from your branch to the original repository's branch.

### 10. Miscellaneous Commands

#### Checking Git Configuration
- View Git configuration:
  git config --list

#### Renaming a Branch
- Rename the current branch:
  git branch -m <new_name>

#### Rebasing
- Rebase the current branch onto another branch:
  git rebase <branch_name>

#### Stashing Changes
- Save uncommitted changes temporarily (stash):
  git stash

- Apply stashed changes:
  git stash apply

- List all stashes:
  git stash list

### 11. Help and Documentation
- Get help for any Git command:
  git <command> --help

- Get help for Git:
  git help

### Summary of Key Commands
- Setup: git config, git init, git clone
- Branching: git branch, git checkout, git merge, git tag
- Remote: git remote add, git push, git pull, git fetch
- Viewing: git status, git log, git diff
- Undo: git reset, git checkout -- <file>
- Stash: git stash, git stash apply
